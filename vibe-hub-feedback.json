{
  "feedback": [
    {
      "id": "5290ce3e-8647-41b2-aa6a-db05c537473d",
      "text": "In the project information section, you have to manually enter a bunch of details. For already existing repos, this could easily be done by claude. Instead add a button that lets you generate this automatically by having claude scan the project files etc. You can add a metadata file (json or md or whatever) inside of the project repo as a template, and then claude just need to fill this document out with the right information. On the page for a project, please add a button that creates this metadata doc if it does not already exists, copies a claude command for filling it out to clipboard, and opens claude in the repo folder for pasting the command.",
      "priority": 3,
      "status": "completed",
      "createdAt": "2025-10-17T01:21:06.777954200+00:00",
      "completedAt": null
    },
    {
      "id": "a0ba3adb-58b7-4e3b-9fdd-e3739c8098eb",
      "text": "In the feedback and improvements list, there is a field that right now just says \"unknown\" for all feedback items. I am guessing this MIGHT be for when the feedback was added, but I am not totatally sure. If it is for that, then look into why this is not properly generated for new feedback items, and fix that bug so that it is correct. If the data is actually unknown, dont print \"unknown\" under the feedback item itself - that is not very helpful. Instead, just remove that text alltogether. Only show it if there is actual data.",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T01:23:29.665732300+00:00",
      "completedAt": null
    },
    {
      "id": "5f5a4e60-bc51-4613-9f1c-73ded09119bb",
      "text": "\"Last modified: unknown\" under all projects. If this data is actually unknown, it would be better to just hide this field entirely. Furthermore, please figure out WHY this is actually unknown, and how it is supposed to be generated. It should probably be contained within some metadata file for vibe hub within the project folder, but maybe it is not properly being generated now.",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T01:24:54.681546300+00:00",
      "completedAt": null
    },
    {
      "id": "177dafd2-62a7-4af3-92b5-7ad08939b78b",
      "text": "Every box and piece of content within the app is stretched all the way to the right and left edges of the screen. This looks quite wierd. Please add padding around the entire app, especially on the left and right side. Edit: a tiiiiny bit of padding was added, but it is still way too small. Please make the padding like 4 times what it currently is. Edit 2: I dont think this fix really works. Now, I am thinking specifically about the projects page. When I change the classname numbers in APP.tsx, it doesnt seem to change the padding on this page, it is still stretched all the way to the sides",
      "priority": 3,
      "status": "completed",
      "createdAt": "2025-10-17T01:25:52.984695400+00:00",
      "completedAt": null
    },
    {
      "id": "c41c9595-54fa-4005-a722-0fc3840cfe4b",
      "text": "It is a bit strange that the way to fix feedback is to press the \"claude code\" button at the top. Instead, please make the button on top simply say \"claude\", remove the dropdown menu from that button, and just make it open claude for the repo. Then, add a button at the top of the feedback list that says \"fix\". If the user presses the \"fix\" button, you should copy the feedback fix command with all the feedback and open claude code in the repo folder",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T01:28:05.897482100+00:00",
      "completedAt": null
    },
    {
      "id": "c456738a-40e2-410c-8022-8208aaf8542d",
      "text": "Next to the \"fix\" button for feedback items, please add a \"copy fix prompt\" button, that doesnt launch claude code but simply copies the prompt to fix all feedback items to clipboard. This is so that it is possible to use this in case the user already has claude code open for the respective app, and dont need to open another window.",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T02:22:14.637946700+00:00",
      "completedAt": null
    },
    {
      "id": "51d0afb5-2f79-4d48-99d1-679626353e75",
      "text": "Please move all \"checked\" feedback items to the bottom of the project page, so that you first only see the pending ones that have not been finished yet",
      "priority": 3,
      "status": "completed",
      "createdAt": "2025-10-17T02:23:01.213813100+00:00",
      "completedAt": null
    },
    {
      "id": "04ea9634-1fd6-4766-b0a4-4a67439a2e10",
      "text": "When adding a feedback item, add a keyboard command ctrl+enter to add it (so that you dont need to physically press the \"add\" button with a mouse click)",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T02:23:39.212096900+00:00",
      "completedAt": null
    },
    {
      "id": "79bd6a96-c934-4779-a6b4-ddaada87fbd7",
      "text": "The tech stack is displayed in a really strange way. Each library or language is listed right after another in a long string with no spaces. This makes it hard to read. Instead, make a little box for each, and separate them clearly with a space. EDIT: This is still not fixed. And to be honest, the entire app looks pretty weird to me at the moment, as if there is no tailwind or CSS styling applied at all. Everything is black and white and with the default font, as though it is only rendering plain html. I am starting to wonder if the styling is applied at all? Since there is also the problem with no padding being added. Please look into this! Also, note that I am testing it with npm run tauri dev, and I dont know if it might be because the styling is only applied on builds (it really should work in dev run, but still, just wanted to add that detail.",
      "priority": 1,
      "status": "completed",
      "createdAt": "2025-10-17T02:24:50.644067700+00:00",
      "completedAt": null
    },
    {
      "id": "14d08494-7db5-4331-aaea-5871a084316d",
      "text": "You can remove the \"project information\" heading. It is pretty clear that the info right under the title of the project is about that project.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:25:28.452662300+00:00",
      "completedAt": null
    },
    {
      "id": "1a82b9b1-da3b-494e-8ecd-f8e43dde0460",
      "text": "Instead of an \"explorer\" button at the top, make it so that the \"path\" info field becomes a button that simply shows the path. left of the path text it can have the folder icon. if you click the button, it opens the folder in explorer.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:26:48.204204300+00:00",
      "completedAt": null
    },
    {
      "id": "3c675ecc-47a8-4c2b-a82f-e72fbc7ba357",
      "text": "When setting the priority of a feedback item, instead of having a dropdown, simply line the 5 priority scales from left to right, so that you can select with one click. Also, add a keyboard command to set the prio level by pressing 1-5 on the keyboard. Edit: In the feedback add view, I cannot see which of the 5 values I have selected. This might also be connected with CSS styling not being properly added.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:27:42.805759300+00:00",
      "completedAt": null
    },
    {
      "id": "3bd36eb8-a49e-42d7-8032-6825ccf5a485",
      "text": "When pressing \"esc\" while adding feedback, please cancel and close the window.",
      "priority": 4,
      "status": "completed",
      "createdAt": "2025-10-17T02:47:37.078287+00:00",
      "completedAt": null
    },
    {
      "id": "f3845294-609c-4376-8d28-8462950b4233",
      "text": "I realized that the 1-5 keyboard command does not make sense when adding feedback, since you are editing the text field and sometimes write numbers. Instead of this, make \"enter\" when you are editing the text field simply exit out of the text field, and then enable the ability to toggle between the priority items. When you have exited the text field, the next enter press adds the item. So basically, it would be: feedback window opens > write feedback > hit enter to exit feedback writing > press 1-5 to set prio > hit enter again to add the feedback / esc to cancel\n\nEdit: does not seem to have been fixed.\n- When you enter the feedback field, it does not automatically focus the text input area, which I want.\n- hitting enter while editing the text accepts the whole thing. this should not be the case. when you are focusing the text area and hit enter, it should just finish text editing, but not add the feedback. then, after you have exited the text area, hitting enter again should add the feedback item.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T02:50:46.061227600+00:00",
      "completedAt": null
    },
    {
      "id": "d383f267-bb86-4a84-96a7-0b822dbd7811",
      "text": "Add an \"implemented\" heading above the checked-off feedback items in the list.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:51:51.604366600+00:00",
      "completedAt": null
    },
    {
      "id": "0e6d9378-59af-4529-97d1-d9e4e0100527",
      "text": "the path button does not really look like a button right now, so you cant really see that you can press it. make it look like the other buttons.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:52:35.628162100+00:00",
      "completedAt": null
    },
    {
      "id": "907aa791-f895-498d-8482-e584d40ad75b",
      "text": "the project title is now just the name of the folder. when you generate metadata for the project with claude, make sure that it also adds a nice name to that project. furthermore, make sure that that name is displayed on the project cards AND on top of the page for a specific project.",
      "priority": 5,
      "status": "completed",
      "createdAt": "2025-10-17T02:53:27.061180600+00:00",
      "completedAt": null
    },
    {
      "id": "6198f523-6289-4df1-9104-8063af510a4a",
      "text": "The project cards are white on a white background, making them hard to see. please give them a color.\n\nEdit: they still have a white fill! Make them have some other, more crazy, fill color.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T02:53:55.518891800+00:00",
      "completedAt": null
    },
    {
      "id": "1d87f92b-fe90-4f8c-b697-2e4293e03270",
      "text": "there are some apps in my directory that hasnt actually been started yet. they basically only have a document outlining the idea for the project. it does not even have a git repo yet. for these projects, still make it so that the hub adds them to the project list, only based on that there is a folder. furthermore, add a \"project status\" metadata field, that is displayed for each project, where you can see if it is in draft mode. The status could be \"draft\", \"implementation started\", and \"deployed\", or something like that. Make sure claude adds this status when it generates the project metadata.",
      "priority": 3,
      "status": "completed",
      "createdAt": "2025-10-17T02:57:45.686672200+00:00",
      "completedAt": null
    },
    {
      "id": "75205aab-33c3-4edc-a204-178ddcb8df75",
      "text": "hit esc in a project view exits to the project list",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:17:43.380569400+00:00",
      "completedAt": null
    },
    {
      "id": "d18a2fec-47a4-4e71-9d1f-d2ea704007da",
      "text": "Create an \"initialize\" button on the main page. This button should:\n1. check to make sure there is a vibe-hub.md document in each project folder, and if there isnt one create it with the template format\n2. for the vibe-hub documents that have missing info (something is not filled out as expected, some metadata is missing), it should prompt claude to fill this data out.",
      "priority": 3,
      "status": "pending",
      "createdAt": "2025-10-17T03:18:49.825462100+00:00",
      "completedAt": null
    },
    {
      "id": "a0bcf9b1-4ace-41c4-bbf5-2cecba08f020",
      "text": "the tech stack kinda contains too much details at the moment. for the user, the tech stack is not ALL that important. that is just for claude to know. So actually, you can remove the tech-stack altogether, or at least the specific coding languages etc. Instead of writing this, it would be more interesting to to know more lite the platform (windows/android/...), as well as if it is local-first, open source, has a backend, etc. More high-level info of how the technology works, but not the exact tools that are being used. please update the metadata doc to reflect this, and make sure it is reflected across the app.",
      "priority": 4,
      "status": "pending",
      "createdAt": "2025-10-17T03:24:02.589002+00:00",
      "completedAt": null
    },
    {
      "id": "848fe630-60bc-4edf-b497-814357e8eac1",
      "text": "Some tech cleanup: Instead of the metadata doc being in MD format, it would be smarter to make it into a JSON doc, since this is easier for a computer to handle (read and write to). That also makes it possible to script when you have the app scan the docs to see if there are missing fields or values or something. Furthermore, inside of the project folder, you might wanna put the feedback document inside of a .vibe folder, and also automatically add this folder to gitignore of that project when it is created. In the .vibe. Alternatively, just keep the json doc at the top level of the project, but ignore it  in git.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:26:17.461300600+00:00",
      "completedAt": null
    },
    {
      "id": "e0578d3f-fc20-4716-b17f-d834aed7f44c",
      "text": "I can see that there are a lot of documentation MD documents at the root of this project. Please clean these up! remove the ones that are no longer needed, and move others into a subfolders so that it is structured and clear.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:26:55.854002600+00:00",
      "completedAt": null
    },
    {
      "id": "8a91437a-877b-4c5e-900f-d0a67ce4d6ed",
      "text": "When working in vibe hub, I keep having to go onto claude on the web to check my usage. If there is an api or something for checking this, please use that and create a \"usage\" bar at the top of the vibe hub, always visible, that shows how much usage you have left of this session. If needed, please let me know where I can put an API key or login details in a .env doc for you to retreive this info with.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:28:14.092952500+00:00",
      "completedAt": null
    },
    {
      "id": "49e26cd9-1df0-4a65-be67-9a18614bfd88",
      "text": "Please provide an easy way for me to make a build of this project, with a shortcut that I can dock to my windows bar so that I can easily open it.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:29:43.949847+00:00",
      "completedAt": null
    },
    {
      "id": "c4015053-5220-4cde-b13e-c701bee7f9cd",
      "text": "fix 3 build warnings",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T03:41:00.145707+00:00",
      "completedAt": null
    },
    {
      "id": "91cc32e7-86a5-4d88-ba7e-156e9c1b532b",
      "text": "every time I open the app using \"npm run tauri dev\", I have to re-select the directory. I dont know if this is also true for builds, or if its only in dev mode, but in either case I would like it to remember the project directly both in builds and in dev mode, so that I dont have to set it every time I open the app.",
      "priority": 4,
      "status": "pending",
      "createdAt": "2025-10-17T03:42:02.685259100+00:00",
      "completedAt": null
    },
    {
      "id": "c6faed24-12e3-4119-a825-34efdeeccc06",
      "text": "when you only need to \"update\" the metadata file for a project, the prompt does not really make sense. it asks claude to generate everything from the start, but it could in theory just generate the fields that are missing.",
      "priority": 5,
      "status": "pending",
      "createdAt": "2025-10-17T05:11:47.988356+00:00",
      "completedAt": null
    }
  ]
}